<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wallet.findMoneyApp.model.po.CreditProductDetailedMapper" >
  <resultMap id="BaseResultMap" type="com.wallet.findMoneyApp.model.po.CreditProductDetailed" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="credit_product_id" property="creditProductId" jdbcType="INTEGER" />
    <result column="term" property="term" jdbcType="VARCHAR" />
    <result column="term_unit" property="termUnit" jdbcType="VARCHAR" />
    <result column="apply_flow" property="applyFlow" jdbcType="VARCHAR" />
    <result column="min_credit_time" property="minCreditTime" jdbcType="VARCHAR" />
    <result column="apply_aptitude" property="applyAptitude" jdbcType="VARCHAR" />
    <result column="product_desc" property="productDesc" jdbcType="VARCHAR" />
    <result column="apply_request_url" property="applyRequestUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="operator_id" property="operatorId" jdbcType="VARCHAR" />
    <result column="operator_name" property="operatorName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, credit_product_id, term, term_unit, apply_flow, min_credit_time, apply_aptitude, 
    product_desc, apply_request_url, create_time, update_time, operator_id, operator_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wallet.findMoneyApp.model.po.CreditProductDetailedExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from credit_product_detailed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from credit_product_detailed
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from credit_product_detailed
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wallet.findMoneyApp.model.po.CreditProductDetailedExample" >
    delete from credit_product_detailed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wallet.findMoneyApp.model.po.CreditProductDetailed" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into credit_product_detailed (credit_product_id, term, term_unit, 
      apply_flow, min_credit_time, apply_aptitude, 
      product_desc, apply_request_url, create_time, 
      update_time, operator_id, operator_name
      )
    values (#{creditProductId,jdbcType=INTEGER}, #{term,jdbcType=VARCHAR}, #{termUnit,jdbcType=VARCHAR}, 
      #{applyFlow,jdbcType=VARCHAR}, #{minCreditTime,jdbcType=VARCHAR}, #{applyAptitude,jdbcType=VARCHAR}, 
      #{productDesc,jdbcType=VARCHAR}, #{applyRequestUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{operatorId,jdbcType=VARCHAR}, #{operatorName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wallet.findMoneyApp.model.po.CreditProductDetailed" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into credit_product_detailed
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="creditProductId != null" >
        credit_product_id,
      </if>
      <if test="term != null" >
        term,
      </if>
      <if test="termUnit != null" >
        term_unit,
      </if>
      <if test="applyFlow != null" >
        apply_flow,
      </if>
      <if test="minCreditTime != null" >
        min_credit_time,
      </if>
      <if test="applyAptitude != null" >
        apply_aptitude,
      </if>
      <if test="productDesc != null" >
        product_desc,
      </if>
      <if test="applyRequestUrl != null" >
        apply_request_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="operatorName != null" >
        operator_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="creditProductId != null" >
        #{creditProductId,jdbcType=INTEGER},
      </if>
      <if test="term != null" >
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="termUnit != null" >
        #{termUnit,jdbcType=VARCHAR},
      </if>
      <if test="applyFlow != null" >
        #{applyFlow,jdbcType=VARCHAR},
      </if>
      <if test="minCreditTime != null" >
        #{minCreditTime,jdbcType=VARCHAR},
      </if>
      <if test="applyAptitude != null" >
        #{applyAptitude,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null" >
        #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="applyRequestUrl != null" >
        #{applyRequestUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        #{operatorName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wallet.findMoneyApp.model.po.CreditProductDetailedExample" resultType="java.lang.Integer" >
    select count(*) from credit_product_detailed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update credit_product_detailed
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.creditProductId != null" >
        credit_product_id = #{record.creditProductId,jdbcType=INTEGER},
      </if>
      <if test="record.term != null" >
        term = #{record.term,jdbcType=VARCHAR},
      </if>
      <if test="record.termUnit != null" >
        term_unit = #{record.termUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.applyFlow != null" >
        apply_flow = #{record.applyFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.minCreditTime != null" >
        min_credit_time = #{record.minCreditTime,jdbcType=VARCHAR},
      </if>
      <if test="record.applyAptitude != null" >
        apply_aptitude = #{record.applyAptitude,jdbcType=VARCHAR},
      </if>
      <if test="record.productDesc != null" >
        product_desc = #{record.productDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.applyRequestUrl != null" >
        apply_request_url = #{record.applyRequestUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorName != null" >
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update credit_product_detailed
    set id = #{record.id,jdbcType=BIGINT},
      credit_product_id = #{record.creditProductId,jdbcType=INTEGER},
      term = #{record.term,jdbcType=VARCHAR},
      term_unit = #{record.termUnit,jdbcType=VARCHAR},
      apply_flow = #{record.applyFlow,jdbcType=VARCHAR},
      min_credit_time = #{record.minCreditTime,jdbcType=VARCHAR},
      apply_aptitude = #{record.applyAptitude,jdbcType=VARCHAR},
      product_desc = #{record.productDesc,jdbcType=VARCHAR},
      apply_request_url = #{record.applyRequestUrl,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      operator_id = #{record.operatorId,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wallet.findMoneyApp.model.po.CreditProductDetailed" >
    update credit_product_detailed
    <set >
      <if test="creditProductId != null" >
        credit_product_id = #{creditProductId,jdbcType=INTEGER},
      </if>
      <if test="term != null" >
        term = #{term,jdbcType=VARCHAR},
      </if>
      <if test="termUnit != null" >
        term_unit = #{termUnit,jdbcType=VARCHAR},
      </if>
      <if test="applyFlow != null" >
        apply_flow = #{applyFlow,jdbcType=VARCHAR},
      </if>
      <if test="minCreditTime != null" >
        min_credit_time = #{minCreditTime,jdbcType=VARCHAR},
      </if>
      <if test="applyAptitude != null" >
        apply_aptitude = #{applyAptitude,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null" >
        product_desc = #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="applyRequestUrl != null" >
        apply_request_url = #{applyRequestUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wallet.findMoneyApp.model.po.CreditProductDetailed" >
    update credit_product_detailed
    set credit_product_id = #{creditProductId,jdbcType=INTEGER},
      term = #{term,jdbcType=VARCHAR},
      term_unit = #{termUnit,jdbcType=VARCHAR},
      apply_flow = #{applyFlow,jdbcType=VARCHAR},
      min_credit_time = #{minCreditTime,jdbcType=VARCHAR},
      apply_aptitude = #{applyAptitude,jdbcType=VARCHAR},
      product_desc = #{productDesc,jdbcType=VARCHAR},
      apply_request_url = #{applyRequestUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      operator_name = #{operatorName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>